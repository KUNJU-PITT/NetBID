% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline_functions.R
\name{draw.targetNet}
\alias{draw.targetNet}
\title{Target network structure plot for the driver.}
\usage{
draw.targetNet(source_label = "", source_z = NULL, edge_score = NULL,
  label_cex = 0.7, source_cex = 1, pdf_file = NULL,
  arrow_direction = "out", n_layer = 1)
}
\arguments{
\item{source_label}{the label for the driver displayed on the plot.}

\item{source_z}{numeric, the Z statistic for the driver, used to color the driver point.
If NULL, the driver will be colored in grey. Default is NULL.}

\item{edge_score}{a vector of numeric values, indicating the correlation between the driver and the target genes.
The value ranges from -1 to 1, with positive value indicating postivie regulation and negative value indicating negative correlation.
The names for the vector is the gene labels displayed on the plot.}

\item{label_cex}{numeric, \code{cex} for the target genes displayed on the plot. Default is 0.7.}

\item{source_cex}{numeric, \code{cex} for the source genes displayed on the plot. Default is 1.}

\item{pdf_file}{character, file path for the pdf file to save the figure into pdf format.If NULL, will not generate pdf file. Default is NULL.}

\item{arrow_direction}{character, choose from 'in' or 'out'. Default is 'out'.}

\item{n_layer}{integer, number of circle layers to display, default is 1.}
}
\value{
Will return logical value indicating whether the plot has been successfully generated
}
\description{
\code{draw.targetNet} will draw the network structure for the selected driver and its target genes.
}
\details{
This is a function to draw target network structure for the selected driver.
The color bar represents the positive (red) or negative (blue) regulation with line width showing the strength.
}
\examples{
source_label <- 'test1'
source_z <- 1.96
edge_score <- (sample(1:200,size=100,replace=TRUE)-100)/100
names(edge_score) <- paste0('G',1:100)
draw.targetNet(source_label=source_label,source_z=source_z,
               edge_score=edge_score)
draw.targetNet(source_label=source_label,source_z=source_z,
               edge_score=edge_score,n_layer=2)
draw.targetNet(source_label=source_label,source_z=source_z,
               edge_score=edge_score,
               arrow_direction='in',
               source_cex=2)
\dontrun{
source_label <- 'test1'
source_z <- 1.96
edge_score <- (sample(1:200,size=100,replace=TRUE)-100)/100
names(edge_score) <- paste0('G',1:100)
analysis.par <- list()
analysis.par$out.dir.PLOT <- getwd()
draw.targetNet(source_label=source_label,source_z=source_z,
               edge_score=edge_score,
               pdf_file=sprintf('\%s/targetNet.pdf',
               analysis.par$out.dir.PLOT))
}
}
