% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline_functions.R
\name{draw.categoryValue}
\alias{draw.categoryValue}
\title{Box plot and stripchart for the gene's expression levels and driver's activity values in samples with different categories.}
\usage{
draw.categoryValue(ac_val = NULL, exp_val = NULL,
  use_obs_class = NULL, category_color = NULL,
  stripchart_color = get_transparent("black", 0.7), strip_cex = 1,
  class_order = NULL, class_srt = 90, class_cex = 1,
  pdf_file = NULL, main_ac = "", main_exp = "", main_cex = 1)
}
\arguments{
\item{ac_val}{a vector of numeric values, the activity level for the interested driver across all samples.}

\item{exp_val}{a vector of numeric values, the expression level for the interested gene across all samples.}

\item{use_obs_class}{a vector of characters, the cateogory class for all samples.
The order of samples in \code{use_obs_class} must be the same with \code{ac_val} or \code{exp_val}.
This vector could be generated by the function \code{get_obs_label} to extract this vector from the data frame of \code{pData(eset)}
by selecting the column name.}

\item{category_color}{a vector of characters, each item is the color for the class in \code{class_order}.
If NULL, will automatically use function \code{get.class.color} generate the color bar. Default is NULL.}

\item{stripchart_color}{character, the color for the stripchart. Default is 'black' with transparent alpha set at 0.7.}

\item{strip_cex}{numeric, \code{cex} for points on the plot. Default is 1.}

\item{class_order}{a vector of characters, the order of category class displayed on the figure.
If NULL, will use the alphabetical order of the category class name. Default is NULL.}

\item{class_srt}{numeric, the displayed category class label rotation in degrees. Default is 90.}

\item{class_cex}{numeric, \code{cex} for the category class label displayed on the plot. Default is 1.}

\item{pdf_file}{character, file path for the pdf file to save the figure into pdf format.If NULL, will not generate pdf file. Default is NULL.}

\item{main_ac}{character, main for the sub-plot of activity level. Default is "".}

\item{main_exp}{character,main for the sub-plot of expression level. Default is "".}

\item{main_cex}{numeric, \code{cex} for the main title displayed on the plot. Default is 1.}
}
\value{
Will return logical value indicating whether the plot has been successfully generated
}
\description{
\code{draw.categoryValue} will draw the box plot with stripchart for the gene's expression levels and/or driver's activity values
 in samples with different phenotype categories.
}
\details{
This is a function to draw the gene's expression level and driver's activity values at the same time in one plot
across samples with different phenotype categories. Also, only draw of expression level or activity level is accepted.
}
\examples{
analysis.par <- list()
analysis.par$out.dir.DATA <- system.file('demo1','driver/DATA/',package = "NetBID2")
NetBID2.loadRData(analysis.par=analysis.par,step='ms-tab')
ms_tab <- analysis.par$final_ms_tab
sig_driver <- draw.volcanoPlot(dat=ms_tab,label_col='gene_label',
                               logFC_col='logFC.metastasis2primary_DA',
                               Pv_col='P.Value.metastasis2primary_DA',
                               logFC_thre=0.01,Pv_thre=0.1,
                               main='Volcano Plot for metastasis2primary_DA',
                               show_label=FALSE,
                               label_type = 'origin',label_cex = 0.5)
driver_list <- rownames(sig_driver)
use_driver <- driver_list[3]
exp_mat <- exprs(analysis.par$cal.eset)
## expression,the rownames could match originalID
ac_mat  <- exprs(analysis.par$merge.ac.eset)
## activity,the rownames could match originalID_label
phe_info <- pData(analysis.par$cal.eset)
use_obs_class <- get_obs_label(phe_info = phe_info,'tumor type')
draw.categoryValue(ac_val=ac_mat[use_driver,],
                   exp_val=exp_mat[ms_tab[use_driver,'originalID'],],
                   use_obs_class=use_obs_class,
                   class_order=c('primary','metastasis'),
                   class_srt=30,
                   main_ac = ms_tab[use_driver,'gene_label'],
                   main_exp=ms_tab[use_driver,'geneSymbol'])
\dontrun{
analysis.par <- list()
analysis.par$out.dir.DATA <- system.file('demo1','driver/DATA/',package = "NetBID2")
NetBID2.loadRData(analysis.par=analysis.par,step='ms-tab')
ms_tab <- analysis.par$final_ms_tab
sig_driver <- draw.volcanoPlot(dat=ms_tab,label_col='gene_label',
                               logFC_col='logFC.metastasis2primary_DA',
                               Pv_col='P.Value.metastasis2primary_DA',
                               logFC_thre=0.01,Pv_thre=0.1,
                               main='Volcano Plot for metastasis2primary_DA',
                               show_label=FALSE,
                               label_type = 'origin',label_cex = 0.5)
driver_list <- rownames(sig_driver)
use_driver <- driver_list[3]
exp_mat <- exprs(analysis.par$cal.eset) ## expression,the rownames could match originalID
ac_mat  <- exprs(analysis.par$merge.ac.eset) ## activity,the rownames could match originalID_label
phe_info <- pData(analysis.par$cal.eset)
use_obs_class <- get_obs_label(phe_info = phe_info,'tumor type')
analysis.par$out.dir.PLOT <- getwd() ## directory for saving the pdf files
draw.categoryValue(ac_val=ac_mat[use_driver,],
                   exp_val=exp_mat[ms_tab[use_driver,'originalID'],],
                   use_obs_class=use_obs_class,
                   class_order=c('primary','metastasis'),
                   class_srt=30,
                   main_ac = ms_tab[use_driver,'gene_label'],
                   main_exp=ms_tab[use_driver,'geneSymbol'],
                   pdf_file=sprintf('\%s/categoryValue_demo1.pdf',
                   analysis.par$out.dir.PLOT))
}
}
