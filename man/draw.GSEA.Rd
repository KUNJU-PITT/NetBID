% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline_functions.R
\name{draw.GSEA}
\alias{draw.GSEA}
\title{GSEA (gene set enrichment analysis) plot for a gene set or a driver.}
\usage{
draw.GSEA(rank_profile = NULL, use_genes = NULL,
  use_direction = NULL, main = "", pdf_file = NULL,
  annotation = NULL, annotation_cex = 1.2, left_annotation = NULL,
  right_annotation = NULL)
}
\arguments{
\item{rank_profile}{a vector of numerics. The ranking profile for the differentiated values in a specific sample condition comparison.
The names of the vector must be the gene names. The value in the vector could be the logFC or t-statistics.}

\item{use_genes}{a vector of characters, the list of genes for analysis. The ID must be the subset of the names of \code{rank_profile}.
This could either be the annotated gene list for the gene set or the target gene list for the driver.}

\item{use_direction}{a vector of numerics, indicate the direction for the driver and the target gene list.
1 indicates positive regulation and -1 indicates negative regulation.
If NULL, will not consider direction information. Default is NULL.}

\item{main}{character, title for the plot. Default is "".}

\item{pdf_file}{character, file path for the pdf file to save the figure into pdf format.If NULL, will not generate pdf file. Default is NULL.}

\item{annotation}{character, annotation for the significance to be displayed on the plot.
If NULL, will perform Kolmogorov-Smirnov tests to get significance. Default is NULL.}

\item{annotation_cex}{numeric, \code{cex} for the annotation displayed on the plot. Default is 1.2}

\item{left_annotation}{character, annotation displayed on the left of the figure representing left condition of the rank_profile. Default is "".}

\item{right_annotation}{character, annotation displayed on the right of the figure representing right condition of the rank_profile. Default is "".}
}
\value{
logical value indicating whether the plot has been successfully generated
}
\description{
\code{draw.GSEA} will generate a GSEA plot for a gene set (with annotated gene list) or a driver (with target gene list).
}
\details{
This is a plot function to draw GSEA for a gene set or a driver by input differentiated expression profile.
User could input the annotation text for the significance or the function could display the significance calculated by Kolmogorov-Smirnov tests.
}
\examples{
analysis.par <- list()
analysis.par$out.dir.DATA <- system.file('demo','driver/DATA/',package = "NetBID2")
NetBID2.loadRData(analysis.par=analysis.par,step='ms-tab')
ms_tab <- analysis.par$final_ms_tab
sig_driver <- draw.volcanoPlot(dat=ms_tab,label_col='gene_label',logFC_col='logFC.metastasis2primary_DA',
                               Pv_col='P.Value.metastasis2primary_DA',logFC_thre=0.01,Pv_thre=0.1,
                               main='Volcano Plot for metastasis2primary_DA',show_label=FALSE,
                               label_type = 'origin',label_cex = 0.5)
driver_list <- rownames(sig_driver)
DE_profile <- analysis.par$DE[[1]]$`Z-statistics`;
names(DE_profile) <- rownames(analysis.par$DE[[1]])
use_driver <- driver_list[1]
use_target_genes <- analysis.par$merge.network$target_list[[use_driver]]$target
use_target_direction <- sign(analysis.par$merge.network$target_list[[use_driver]]$spearman) ## 1/-1
annot <- sprintf('P-value: \%s',signif(ms_tab[use_driver,'P.Value.metastasis2primary_DA'],2))
## draw for the driver
draw.GSEA(rank_profile=DE_profile,use_genes=use_target_genes,use_direction=use_target_direction,
          main=sprintf('GSEA plot for driver \%s',ms_tab[use_driver,'gene_label']),
          annotation=annot,annotation_cex=1.2,
          left_annotation='high in metastasis',right_annotation='high in primary')
## draw for the gene set
use_genes <- unique(analysis.par$merge.network$network_dat$target.symbol)
transfer_tab <- get_IDtransfer2symbol2type(from_type = 'ensembl_transcript_id',use_genes=use_genes) ## get transfer table !!!
DE_profile_symbol <- DE_profile
names(DE_profile_symbol) <- get_name_transfertab(names(DE_profile),transfer_tab = transfer_tab)
use_gs_id <- 'REACTOME_CD28_DEPENDENT_PI3K_AKT_SIGNALING'
use_target_genes <- all_gs2gene[['CP:REACTOME']][[use_gs_id]]
draw.GSEA(rank_profile=DE_profile_symbol,use_genes=use_target_genes,use_direction=NULL,
          main=sprintf('GSEA plot for \%s',use_gs_id),
          annotation=NULL,annotation_cex=1.2,
          left_annotation='high in metastasis',right_annotation='high in primary')

\dontrun{
#' analysis.par <- list()
analysis.par$out.dir.DATA <- system.file('demo','driver/DATA/',package = "NetBID2")
NetBID2.loadRData(analysis.par=analysis.par,step='ms-tab')
ms_tab <- analysis.par$final_ms_tab
sig_driver <- draw.volcanoPlot(dat=ms_tab,label_col='gene_label',logFC_col='logFC.metastasis2primary_DA',
                               Pv_col='P.Value.metastasis2primary_DA',logFC_thre=0.01,Pv_thre=0.1,
                               main='Volcano Plot for metastasis2primary_DA',show_label=FALSE,
                               label_type = 'origin',label_cex = 0.5)
driver_list <- rownames(sig_driver)
DE_profile <- analysis.par$DE[[1]]$`Z-statistics`;
names(DE_profile) <- rownames(analysis.par$DE[[1]])
use_driver <- driver_list[3]
use_target_genes <- analysis.par$merge.network$target_list[[use_driver]]$target
use_target_direction <- sign(analysis.par$merge.network$target_list[[use_driver]]$spearman) ## 1/-1
annot <- sprintf('P-value: \%s',signif(ms_tab[use_driver,'P.Value.metastasis2primary_DA'],2))
analysis.par$out.dir.PLOT <- getwd() ## directory for saving the pdf files
draw.GSEA(rank_profile=DE_profile,use_genes=use_target_genes,use_direction=use_target_direction,
          main=sprintf('GSEA plot for driver \%s',ms_tab[use_driver,'gene_label']),
          pdf_file = sprintf('\%s/GSEA_driver.pdf',analysis.par$out.dir.PLOT),
          annotation=annot,annotation_cex=1.2,
          left_annotation='high in metastasis',right_annotation='high in primary')
## draw for the gene set
use_genes <- unique(analysis.par$merge.network$network_dat$target.symbol)
transfer_tab <- get_IDtransfer2symbol2type(from_type = 'ensembl_transcript_id',use_genes=use_genes) ## get transfer table !!!
DE_profile_symbol <- DE_profile
names(DE_profile_symbol) <- get_name_transfertab(names(DE_profile),transfer_tab = transfer_tab)
use_gs_id <- 'REACTOME_CD28_DEPENDENT_PI3K_AKT_SIGNALING'
use_target_genes <- all_gs2gene[['CP:REACTOME']][[use_gs_id]]
analysis.par$out.dir.PLOT <- getwd() ## directory for saving the pdf files
draw.GSEA(rank_profile=DE_profile_symbol,use_genes=use_target_genes,use_direction=NULL,
          main=sprintf('GSEA plot for \%s',use_gs_id),
          annotation=NULL,annotation_cex=1.2,
          pdf_file = sprintf('\%s/GSEA_gs.pdf',analysis.par$out.dir.PLOT),
          left_annotation='high in metastasis',right_annotation='high in primary')
}
}
