% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline_functions.R
\name{draw.heatmap}
\alias{draw.heatmap}
\title{Heatmap plot for displaying expression level or activity level for genes and drivers}
\usage{
draw.heatmap(mat = NULL, use_genes = rownames(mat),
  use_gene_label = use_genes, use_samples = colnames(mat),
  use_sample_label = use_samples, phenotype_info = NULL,
  use_phe = NULL, main = "", scale = "none", pdf_file = NULL,
  cluster_rows = TRUE, cluster_columns = TRUE,
  clustering_distance_rows = "pearson",
  clustering_distance_columns = "pearson", row_names_gp = gpar(fontsize
  = 12), column_names_gp = gpar(fontsize = 12), show_row_names = TRUE,
  show_column_names = TRUE, ...)
}
\arguments{
\item{mat}{numeric matrix, each row as one gene or driver, each column as one sample}

\item{use_genes}{a vector of characters, the list of genes for display. Default is the rownames(mat).}

\item{use_gene_label}{a vector of characters, label for the list of genes for display. Default is the use_genes.}

\item{use_samples}{a vector of characters, the list of samples for display. Default is the colnames(mat).}

\item{use_sample_label}{a vector of characters, label for the list of samples for display. Default is the use_samples.}

\item{phenotype_info}{data.frame,contain the sample phenotype information, can be generated by \code{pData(eset)}.
The rownames should match the colnames of mat. Default is NULL.}

\item{use_phe}{a list of characters, selected phenotype for display,must be the subset of colnames of phenotype_info.Default is NULL.}

\item{main}{character, title for the plot. Default is "".}

\item{scale}{character, indicating if the values should be centered and scaled in either the row direction or the column direction, or none.
The default is "none".}

\item{pdf_file}{character, file path for the pdf file to save the figure into pdf format.If NULL, will not generate pdf file. Default is NULL.}

\item{cluster_rows, cluster_columns}{parameters used in \code{Heatmap}, please check for details. Default is TRUE.}

\item{clustering_distance_rows, clustering_distance_columns}{parameters used in \code{Heatmap}, please check for details. Default is 'pearson'.}

\item{row_names_gp, column_names_gp}{parameters used in \code{Heatmap}, please check for details. Default is gpar(fontsize = 12).}

\item{show_row_names, show_column_names}{parameters used in \code{Heatmap}, please check for details. Default is TRUE.}

\item{..., }{more parameters used in \code{Heatmap}}
}
\value{
logical value indicating whether the plot has been successfully generated
}
\description{
\code{draw.heatmap} draw the heatmap for expression level or activity level for genes and drivers across selected samples.
}
\details{
This plot function input the expression/activity matrix, with each row as one gene or driver, each column as one sample.
}
\examples{
analysis.par <- list()
analysis.par$out.dir.DATA <- system.file('demo1/driver/DATA/',package = "NetBID2")
NetBID2.loadRData(analysis.par=analysis.par,step='ms-tab')
ms_tab <- analysis.par$final_ms_tab
exp_mat <- exprs(analysis.par$cal.eset) ## expression,the rownames matches originalID in ms_tab
ac_mat <- exprs(analysis.par$merge.ac.eset) ## ac,the rownames matches originalID_label in ms_tab
phe_info <- pData(analysis.par$cal.eset) ## phenotype information
sig_driver <- draw.volcanoPlot(dat=ms_tab,label_col='gene_label',
                               logFC_col='logFC.G4.Vs.others_DA',
                               Pv_col='P.Value.G4.Vs.others_DA',
                               logFC_thre=0.4,
                               Pv_thre=1e-7,
                               main='Volcano Plot for G4.Vs.others_DA',
                               show_label=FALSE,
                               label_type = 'origin',
                               label_cex = 0.5)
sig_driver <- sig_driver[1:10,]
draw.heatmap(mat=exp_mat,use_genes=ms_tab[rownames(sig_driver),'originalID'],
            use_gene_label=ms_tab[rownames(sig_driver),'gene_label'],
            use_samples=colnames(exp_mat),
            use_sample_label=phe_info[colnames(exp_mat),'geo_accession'],
            phenotype_info=phe_info,use_phe=c('gender','pathology','subgroup'),
            main='Expression for Top drivers',scale='row',
            cluster_rows=TRUE,cluster_columns=TRUE,
            clustering_distance_rows='pearson',
            clustering_distance_columns='pearson',
            row_names_gp = gpar(fontsize = 12))
draw.heatmap(mat=ac_mat,use_genes=ms_tab[rownames(sig_driver),'originalID_label'],
             use_gene_label=ms_tab[rownames(sig_driver),'gene_label'],
             use_samples=colnames(exp_mat),
             use_sample_label=phe_info[colnames(exp_mat),'geo_accession'],
             phenotype_info=phe_info,use_phe=c('gender','pathology','subgroup'),
             main='Activity for Top drivers',scale='row',
             cluster_rows=TRUE,cluster_columns=TRUE,
             clustering_distance_rows='pearson',
             clustering_distance_columns='pearson',
             row_names_gp = gpar(fontsize = 6))

\dontrun{
analysis.par <- list()
analysis.par$out.dir.DATA <- system.file('demo1/driver/DATA/',package = "NetBID2")
NetBID2.loadRData(analysis.par=analysis.par,step='ms-tab')
ms_tab <- analysis.par$final_ms_tab
exp_mat <- exprs(analysis.par$cal.eset) ## expression,the rownames matches originalID in ms_tab
ac_mat <- exprs(analysis.par$merge.ac.eset) ## ac,the rownames matches originalID_label in ms_tab
phe_info <- pData(analysis.par$cal.eset) ## phenotype information
analysis.par$out.dir.PLOT <- getwd() ## directory for saving the pdf files
sig_driver <- draw.volcanoPlot(dat=ms_tab,label_col='gene_label',
                               logFC_col='logFC.G4.Vs.others_DA',
                               Pv_col='P.Value.G4.Vs.others_DA',
                               logFC_thre=0.4,
                               Pv_thre=1e-7,
                               main='Volcano Plot for G4.Vs.others_DA',
                               show_label=FALSE,
                               label_type = 'origin',
                               label_cex = 0.5)
draw.heatmap(mat=exp_mat,use_genes=ms_tab[rownames(sig_driver),'originalID'],
            use_gene_label=ms_tab[rownames(sig_driver),'gene_label'],
            use_samples=colnames(exp_mat),
            use_sample_label=phe_info[colnames(exp_mat),'geo_accession'],
            phenotype_info=phe_info,
            use_phe=c('gender','pathology','subgroup'),
            main='Expression for Top drivers',scale='row',
            cluster_rows=TRUE,cluster_columns=TRUE,
            clustering_distance_rows='pearson',
            clustering_distance_columns='pearson',
            row_names_gp = gpar(fontsize = 12),
            pdf_file=sprintf('\%s/heatmap_demo1.pdf',
            analysis.par$out.dir.PLOT))
draw.heatmap(mat=ac_mat,use_genes=ms_tab[rownames(sig_driver),'originalID_label'],
             use_gene_label=ms_tab[rownames(sig_driver),'gene_label'],
             use_samples=colnames(exp_mat),
             use_sample_label=phe_info[colnames(exp_mat),'geo_accession'],
             phenotype_info=phe_info,
             use_phe=c('gender','pathology','subgroup'),
             main='Activity for Top drivers',scale='row',
             cluster_rows=TRUE,cluster_columns=TRUE,
             clustering_distance_rows='pearson',
             clustering_distance_columns='pearson',
             row_names_gp = gpar(fontsize = 6),
             pdf_file=sprintf('\%s/heatmap_demo2.pdf',
             analysis.par$out.dir.PLOT))
}
}
