% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline_functions.R
\name{get_name_transfertab}
\alias{get_name_transfertab}
\title{Gene ID conversion related functions.}
\usage{
get_name_transfertab(use_genes = NULL, transfer_tab = NULL,
  from_type = NULL, to_type = NULL)
}
\arguments{
\item{use_genes}{a vector of characters, gene list used for ID conversion.}

\item{transfer_tab}{data.frame, the transfer table for ID conversion, could be obtained by \code{get_IDtransfer}.}

\item{from_type}{character, attribute name from the biomaRt package, such as 'ensembl_gene_id','ensembl_gene_id_version'
'ensembl_transcript_id','ensembl_transcript_id_version','refseq_mrna'. Full list could be obtained by
\code{listAttributes(mart)$name}, where \code{mart} is the output of \code{useMart} function.
The type must be the gene type for the input \code{use_genes}.}

\item{to_type}{character, character, attribute name from the biomaRt package, the gene type will be convereted to.}
}
\value{
\code{get_name_transfertab} will return the list for the converted IDs.
}
\description{
\code{get_name_transfertab} will get the transfered ID by input the original ID and transfer table.
}
\examples{
use_genes <- c("ENST00000210187",ENST00000216083","ENST00000216127",
             "ENST00000216416","ENST00000217233",ENST00000221418")
transfer_tab <- get_IDtransfer(from_type = 'ensembl_transcript_id',
                               to_type='external_gene_name',use_genes=use_genes) ## get transfer table !!!
res1 <- get_name_transfertab(use_genes,transfer_tab=transfer_tab)
transfer_tab_withtype <- get_IDtransfer2symbol2type(from_type = 'ensembl_transcript_id',
                                                   use_genes=use_genes) ## get transfer table !!!
\dontrun{
}
}
