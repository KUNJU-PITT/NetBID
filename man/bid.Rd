% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline_functions.R
\name{bid}
\alias{bid}
\title{Calculate differential expression (DE)/differential activity (DA) by Bayesian Inference.}
\usage{
bid(mat = NULL, use_obs_class = NULL, class_order = NULL,
  class_ordered = TRUE, method = c("MLE", "Bayesian"),
  family = gaussian, pooling = c("full", "no", "partial"),
  prior.V.scale = 0.02, prior.R.nu = 1, prior.G.nu = 2,
  nitt = 13000, burnin = 3000, thin = 10, std = TRUE,
  logTransformed = TRUE, log.base = 2, average.method = "geometric",
  pseudoCount = 0, return_model = FALSE, use_seed = 999,
  verbose = FALSE)
}
\arguments{
\item{mat}{matrix, input expression/activity matrix for IDs (gene/transcript/probe) belong to one gene/gene set, each column is one sample.
The matrix is strongly suggest to contain rownames for IDs and colnames for samples.
Supposing geneA has multiple probes A1,A2, in Samples (Case-rep1, Case-rep2, Case-rep3, Control-rep1, Control-rep2, Control-rep3).
The \code{mat} will be a 2*6 numeric matrix.
If the gene only contains one probe, the matrix should be a one-row matrix.}

\item{use_obs_class}{a vector of characters, the cateogory class for all samples.
The order of samples in use_obs_class must be the same with mat if no names of the vector is provided.
This vector could be generated by the function get_obs_label to extract this vector from the dataframe of pData(eset) by selecting the column name.}

\item{class_order}{a vector of characters, the order for the sample classes.
Attention: The first class in this order vector will be treated as control.
If class_ordered==TRUE, The order must be consistent with the phenotypic trend, such as "low", "medium", "high". Else, only the first order is important.
If NULL, will use the alphabetical order in \code{use_obs_class}. Default is NULL.}

\item{class_ordered}{logical, whether the sample class in class_order is ordered or not. Default is TRUE.}

\item{method}{character, choose from 'MLE' or 'Bayesian'.
'MLE' stands for maximum likelihood estimation, that the function will use generalized linear model(glm/glmer) to fit the data
for the expression value and sample phenotype, and use MLE to estimate the regression coefficients.
'Bayesian' means that the function will use Bayesian generalized linear model (bayesglm)
or multivariate generalized linear mixed model (MCMCglmm) to fit the data.
Default is 'Bayesian'.}

\item{family}{a description of the error distribution and link function to be used in the model.
This can be a character string naming a family function, a family function or the result of a call to a family function.
(See family for details of family functions).
Currently only support gaussian,poisson,binomial(two group sample class)/category(multi-group sample class)/ordinal(multi-group sample class with class_ordered=TRUE)
If set at gaussian or poission, the response variable will be the expression level and the regressors will be the sample phenotype.
If set at binomial,the response variable will be the sample phenotype and the regressors will be the expression level.
For the input of binomial, category and ordinal, the family will be automatically reset by the input sample class level and the setting of class_ordered.
Default is gaussian.}

\item{pooling}{character, choose from 'full','no','partial'. The strategy for the calculation of DE/DA.
Supposing geneA has multiple probes A1,A2, in Samples (Case-rep1, Case-rep2, Case-rep3, Control-rep1, Control-rep2, Control-rep3).
The \code{mat} contains the expression for probes A1,A2 in all samples.
The purpose is to testify the DE of geneA between Case and Control.
'full' means to pull the probe together and treat them as indepedent observations.
'no' means to treat the probe information as an independent variable in the regression model.
'partial' means to treat the probe information as a random effect in the regression model.
Default is 'full'.}

\item{prior.V.scale}{numeric, parameters used in the prior list for \code{MCMCglmm}.
Useful when setting method as 'Bayesian' and pooling as 'partial'.
Default is 0.02}

\item{prior.R.nu}{numeric, parameters in the prior list for used in \code{MCMCglmm}.
Useful when setting method as 'Bayesian' and pooling as 'partial'.
Default is 1}

\item{prior.G.nu}{numeric, parameters in the prior list for used in \code{MCMCglmm}.
Useful when setting method as 'Bayesian' and pooling as 'partial'.
Default is 2}

\item{nitt}{numeric, number of MCMC iterations, parameters used in \code{MCMCglmm}.
Useful when setting method as 'Bayesian' and pooling as 'partial'.
Default is 13000}

\item{burnin}{numeric, parameters used in \code{MCMCglmm}.
Useful when setting method as 'Bayesian' and pooling as 'partial'.
Default is 3000}

\item{thin}{numeric, thinning interval, parameters used in \code{MCMCglmm}.
Useful when setting method as 'Bayesian' and pooling as 'partial'.
Default is 10}

\item{std}{logical, whether to perform std to the original expression matrix. Default is TRUE}

\item{logTransformed}{logical, whether the original data has been log transformation. Default is TRUE.}

\item{log.base}{numeric, the base for log transformation, only used when do.logtransform is TRUE. Default is 2.}

\item{average.method}{character, the strategy to calculate FC (fold change), choose from 'geometric','arithmetic'. Default is 'geometric'.}

\item{pseudoCount}{integer, pseudo count to add for all value to avoid -Inf in log transformation when calculating FC (fold change).}

\item{return_model}{logical, indicate what kind of data to return, if TRUE, the regression model will be returned, otherwise the basic statistics will be returned. Default is FALSE.}

\item{use_seed}{integer, random seed, default is 999.}

\item{verbose}{logical, whether to print addtional information.Default is FALSE.}
}
\value{
one row data.frame containing the output statistics or the regression model if set return_model as TRUE.
}
\description{
\code{bid} is a function to get differential expression (DE)/differential activity (DA) by Bayesian Inference.
}
\details{
It is the inner function for \code{getDE.BID.2G} and also could be directly called.
More options related with statistics in Bayesian Inference is provided in this function.
If user input the ID conversion table \code{use_feature_info}, the original input expression matrix could be at probe/transcript level,
and the output for DE/DA could be at gene level. Three pooling strategies could be selected for calculation.
The P-value is approximately estimated by the posterior distribution of the coefficient and test whether it is significantly different from 0.
}
\examples{
mat <- matrix(c(0.50099,1.2108,1.0524,-0.34881,-0.13441,-0.87112,
                1.84579,2.0356,2.6025,1.62954,1.88281,1.29604),
                nrow=2,byrow=TRUE)
rownames(mat) <- c('A1','A2')
colnames(mat) <- c('Case-rep1','Case-rep2','Case-rep3',
                  'Control-rep1','Control-rep2','Control-rep3')
res1 <- bid(mat=mat,
           use_obs_class = c(rep('Case',3),rep('Control',3)),
           class_order = c('Control','Case'))
\dontrun{
}
}
