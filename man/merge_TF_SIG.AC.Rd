% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline_functions.R
\name{merge_TF_SIG.AC}
\alias{merge_TF_SIG.AC}
\title{Merge Activity Values from TF (transcription factors) ExpressionSet Object and Sig (signaling factors) ExpressionSet Object}
\usage{
merge_TF_SIG.AC(TF_AC = NULL, SIG_AC = NULL)
}
\arguments{
\item{TF_AC}{ExpressionSet object, containing the activity values for all TFs.}

\item{SIG_AC}{ExpressionSet object, containing the activity values for all SIGs.}
}
\value{
Return an ExpressionSet object.
}
\description{
\code{merge_TF_SIG.AC} combines the activity value from TF (transcription factors) and Sig (signaling factors) ExpressionSet objects together,
and adds "_TF" or "_SIG" suffix to drivers for easier distinction.
}
\examples{
analysis.par <- list()
analysis.par$out.dir.DATA <- system.file('demo1','driver/DATA/',package = "NetBID2")
NetBID.loadRData(analysis.par=analysis.par,step='ms-tab')
ac_mat_TF <- cal.Activity(target_list=analysis.par$tf.network$target_list,
                       cal_mat=exprs(analysis.par$cal.eset),
                       es.method='weightedmean')
ac_mat_SIG <- cal.Activity(target_list=analysis.par$tf.network$target_list,
                       cal_mat=exprs(analysis.par$cal.eset),
                       es.method='weightedmean')
analysis.par$ac.tf.eset  <- generate.eset(exp_mat=ac_mat_TF,
                                          phenotype_info=pData(analysis.par$cal.eset))
analysis.par$ac.sig.eset <- generate.eset(exp_mat=ac_mat_SIG,
                                          phenotype_info=pData(analysis.par$cal.eset))
analysis.par$merge.ac.eset <- merge_TF_SIG.AC(TF_AC=analysis.par$ac.tf.eset,
                                          SIG_AC=analysis.par$ac.sig.eset)
}
